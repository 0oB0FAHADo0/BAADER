<!DOCTYPE html>
<html lang="en" dir="rtl" data-theme="light">
<head>
    <style>
        .card-container {
            display: flex;
            flex-wrap: wrap;
            gap: 16px;
            justify-content: center;
        }

        .card {
            border: 1px solid #454343;
            border-radius: 8px;
            padding: 16px;
            width: 315px;
            height: 350px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            transition: box-shadow 0.3s;
            background-color: #e9f1f0;
            cursor: pointer;
            position: relative;
            overflow: hidden; 
        }

        .card:hover {
            box-shadow: 0 4px 18px 0 rgba(0, 0, 0, 0.25);
        }

        .card-header {
            font-weight: bold;
            font-size: 1.2em;
            margin-bottom: 8px;
            background-color: #0F7179;
            color: white;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            text-align: center;
        }

        .card-body {
            margin-bottom: 8px;
            font-size: 25px;
            font-weight: 500;
            text-align: center;
            overflow: hidden; 
            text-overflow: ellipsis;
        }

        .card-footer {
            color: white;
            background-color: #0F7179;
            font-size: 20px;
            position: absolute;
            bottom: 0;
            width: 100%;
            padding: 10px;
            text-align: center;
        }

        .card-button {
            transform: translate(-50%, 125%);
            width: 60%;
            border-radius: 1rem;
            border: none;
            background-color: #0F7179;
            color: white;
            font-size: 1rem;
            padding: .5rem 1rem;
            position: absolute;
            left: 50%;
            bottom: 20px;
            opacity: 0;
            transition: 0.3s ease-out;
        }

        .card:hover .card-button {
            transform: translate(-50%, 50%);
            opacity: 1;
        }

        .pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
            gap: 10px;
        }

        .pagination button {
            padding: 10px 20px;
            margin: 0 5px;
            background-color: #0F7179;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .pagination button:disabled {
            background-color: #ccc;
            cursor: not-allowed;
        }

        .pagination-info {
            font-size: 18px;
        }
    </style>
</head>
<body>
    <div class="block mb-4">
        <div class="block-header border-bottom px-4 py-3">
            <h5 class="m-0">الجلسات المتوفرة</h5>
            <div class="d-flex gap-2">
                <div class="form-group">
                    <input type="text" class="form-control table__quick_search" placeholder="البحث السريع ...">
                </div>
            </div>
        </div>
        <div class="block-body">
            <div class="card-container" id="courseCards">
                @foreach (var item in Model)
                {
                    <div class="card">
                        <div class="card-header"> @item.SessionNameAr</div>
                        <div class="card-body">
                            <div >
                                
                                المقرر: @item.CourseNameAr
                                <br />
                                <br />
                                <div>

                                    @item.MajorNameAr
                                </div>
                                
                                <br />
                                التاريخ: @item.SessionDate
                            </div>
                            
                        </div>
                            <form>
                                <button class="card-button" asp-route-id="@item.GUID" asp-action="Create">للتفاصيل</button>
                            </form>
                    </div>
                }
                
            </div>

            <div class="pagination">
                <button id="prevBtn" disabled>السابق</button>
                <span class="pagination-info" id="paginationInfo">صفحة 1 من 1</span>
                <button id="nextBtn">التالي</button>
            </div>
        </div>
    </div>
</body>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const searchInput = document.querySelector('.table__quick_search');
        const cards = Array.from(document.querySelectorAll('.card'));
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        const paginationInfo = document.getElementById('paginationInfo');
        const cardsPerPage = 6;
        let currentPage = 1;
        let filteredCards = cards;  // Initially, all cards are visible

        // Display cards based on current page and filtered cards
        function displayCards() {
            if (filteredCards.length === 0) {
                // If no cards match the search term, show "لا توجد جلسات متوفرة"
                paginationInfo.textContent = "لا توجد جلسات متوفرة";
                prevBtn.style.display = 'none'; // Hide previous button
                nextBtn.style.display = 'none'; // Hide next button
                cards.forEach(card => card.style.display = 'none'); // Hide all cards
            } else {
                const start = (currentPage - 1) * cardsPerPage;
                const end = start + cardsPerPage;

                // Show filtered cards for the current page
                cards.forEach(card => card.style.display = 'none'); // Hide all cards first
                filteredCards.slice(start, end).forEach(card => card.style.display = ''); // Show current page cards

                // Update the pagination buttons and page info
                prevBtn.style.display = ''; // Show buttons again
                nextBtn.style.display = ''; // Show buttons again
                prevBtn.disabled = currentPage === 1;
                nextBtn.disabled = currentPage === Math.ceil(filteredCards.length / cardsPerPage);
                paginationInfo.textContent = `صفحة ${currentPage} من ${Math.ceil(filteredCards.length / cardsPerPage)}`;
            }
        }

        // Initial display of cards
        displayCards();

        // Next button event
        nextBtn.addEventListener('click', function () {
            currentPage++;
            displayCards();
        });

        // Previous button event
        prevBtn.addEventListener('click', function () {
            currentPage--;
            displayCards();
        });

        // Search filter logic
        searchInput.addEventListener('input', function () {
            const searchTerm = searchInput.value.toLowerCase();

            // Filter the cards based on the search term
            filteredCards = cards.filter(card => card.innerText.toLowerCase().includes(searchTerm));

            // Reset to first page and display filtered results
            currentPage = 1;
            displayCards();
        });
    });
</script>

