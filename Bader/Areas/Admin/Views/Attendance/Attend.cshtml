@model IEnumerable<AttendanceViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>
<html lang="en" dir="rtl" data-theme="light">
<body>
    <form asp-action="Attend" method="post">

        <section class="page_wrap">
            <div class="page_content">
                <div class="block mb-4">
                    <div class="block-header border-bottom px-4 py-3">
                        <h5 class="m-0">الحضور</h5>
                        <div class="d-flex gap-2">
                            <div class="form-group">
                                <input type="text" class="form-control table__quick_search"
                                       placeholder="البحث السريع ...">
                            </div>
                        </div>
                    </div>
                    <div class="block-body">
                        @if (Model == null || !Model.Any())
                        {
                            <p>لا توجد سجلات حضور لعرضها.</p>
                        }
                        else
                        {
                            <table class="table table-hover js-dataTable">
                                <thead>
                                    <tr>
                                        <th>@Html.DisplayNameFor(x => x.UserName)</th>
                                        <th>@Html.DisplayNameFor(x => x.FullNameAr)</th>
                                        <th>
                                            <span>حالة الحضور</span>
                                            <input type="checkbox" id="selectAll" style="margin-right: 10px;" />
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Count(); i++)
                                    {
                                        var item = Model.ElementAt(i);
                                        <tr class="cursor-pointer">
                                            <td>
                                                @item.UserName
                                                <input type="hidden" name="attendx[@i].UserName" value="@item.UserName" />
                                            </td>
                                            <td>
                                                @item.FullNameAr
                                            </td>
                                            <td>
                                                <input hidden name="attendx[@i].SessionDate" value="@item.SessionDate" />
                                                <input hidden name="attendx[@i].GUID" value="@item.GUID" />
                                                <input hidden name="attendx[@i].SessionId" value="@item.SessionId" />

                                                <input type="checkbox" class="form-check-input attendCheckbox" name="attendx[@i].IsAttend" value="true" @(item.IsAttend ? "checked" : "") />
                                                <input type="hidden" name="attendx[@i].IsAttend" value="false" />
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                </div>
                <div class="mt-3" style="text-align: right;">
                    <button class="btn btn-primary btn-lg" type="submit">حفظ</button>
                </div>

            </div>
        </section><!-- End Page Wrap -->
    </form>

    @section Scripts {
        <script>
            const selectAllCheckbox = document.getElementById('selectAll');
            const attendCheckboxes = document.querySelectorAll('.attendCheckbox');

            // Update the "Select All" checkbox state based on individual checkboxes
            function updateSelectAllCheckbox() {
                selectAllCheckbox.checked = [...attendCheckboxes].every(checkbox => checkbox.checked);
            }

            // When "Select All" checkbox is clicked
            selectAllCheckbox.onclick = function () {
                attendCheckboxes.forEach(checkbox => {
                    checkbox.checked = this.checked;
                });
            };

            // When any individual checkbox is clicked
            attendCheckboxes.forEach(checkbox => {
                checkbox.onclick = updateSelectAllCheckbox;
            });

            // Call updateSelectAllCheckbox on page load to set the correct state
            updateSelectAllCheckbox();

            @if (@ViewData["Successful"] != null)
            {
                <Text>
                                    var result = '@Html.Raw(ViewData["Successful"])';
                Swal.fire({
                    title: "تمت العملية",
                    text: result,
                    icon: "success",
                    confirmButtonText: "تم"
                }).then(function () {
                    window.location.href = '@Url.Action("Index", "Attendance")';
                });
                </Text>
            }
            else if (@ViewData["Falied"] != null)
            {
                <Text>
                                    var result = '@Html.Raw(ViewData["Falied"])';
                Swal.fire({
                    icon: "error",
                    title: "فشلت العملية",
                    text: result,
                    confirmButtonText: "تم"
                });
                </Text>
            }
        </script>
    }
</body>
</html>
